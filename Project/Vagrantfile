# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$enable_serial_logging = false

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "trusty64"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.

  # Ruby on Rails
  config.vm.network :forwarded_port, guest: 3000, host: 3000

  # React
  config.vm.network :forwarded_port, guest: 8080, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network :public_network

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.

  # Be sure to set atomic saves to false in Sublime so NFS can copy files over correctly
  config.vm.synced_folder ".",        "/home/vagrant/apprentice", type: 'nfs'
  config.vm.synced_folder "./share", "/share",   type: 'nfs'

  # Not useful if need to sync from guest VM back to host machine
  #config.vm.synced_folder ".", "/vagrant", type: 'rsync'
  #config.vm.synced_folder ".", "/vagrant", type: 'nfs', mount_options: ['vers=3','udp','sync']

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider :virtualbox do |vb|
     # Don't boot with headless mode
     #vb.gui = true

     # To fix DNS resolution issues
     vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]

     # Use VBoxManage to customize the VM. For example to change memory:
     vb.customize ["modifyvm", :id, "--memory", "3072"]
     vb.customize ["modifyvm", :id, "--cpus", 2]

     # Handle syncing the clock
     vb.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 500 ]
  end

  # Run external install script
  config.vm.provision :shell, path: "script/vagrant_setup.sh"
  config.vm.provision :shell, path: 'script/draw.sh', run: :always
end
